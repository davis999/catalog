package io.reactivesw.catalog.domain.entity;

import com.google.common.base.Objects;

import java.io.Serializable;
import java.time.ZonedDateTime;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.validation.constraints.Size;

/**
 * this is the entity class for attribute value.
 *
 * @author Davis
 */
@Entity
@Table(name = "sw_attribute_value")
public class AttributeValue implements Serializable {
  private static final long serialVersionUID = -6486752768122183026L;

  /**
   * id for attribute value. auto generated by database.
   */
  @Id
  @Column(name = "attribute_value_id")
  @GeneratedValue(strategy = GenerationType.AUTO)
  private long id;

  /**
   * value for attribute value.
   */
  @Size(max = 255)
  @Column(name = "value", length = 255, nullable = false)
  private String value;

  /**
   * create time for product.
   */
  @Column(name = "created_time")
  private ZonedDateTime createdTime;

  /**
   * last modified time for product.
   */
  @Column(name = "modified_time")
  private ZonedDateTime modifiedTime;

  /**
   * attribute.
   */
  @ManyToOne(targetEntity = Attribute.class, cascade = CascadeType.ALL)
  @JoinColumn(name = "attribute_id")
  private Attribute attribute;

  /**
   * get id.
   *
   * @return the id
   */
  public long getId() {
    return id;
  }

  /**
   * set id.
   *
   * @param id the id to set
   */
  public void setId(long id) {
    this.id = id;
  }

  /**
   * get value.
   *
   * @return the value
   */
  public String getValue() {
    return value;
  }

  /**
   * set value.
   *
   * @param value the value to set
   */
  public void setValue(String value) {
    this.value = value;
  }

  /**
   * get createdTime.
   *
   * @return createdTime
   */
  public ZonedDateTime getCreatedTime() {
    return createdTime;
  }

  /**
   * set createdTime.
   *
   * @param createdTime createdTime
   */
  public void setCreatedTime(ZonedDateTime createdTime) {
    this.createdTime = createdTime;
  }

  /**
   * get lastModifiedTiem.
   *
   * @return lastModifiedTiem
   */
  public ZonedDateTime getModifiedTime() {
    return modifiedTime;
  }

  /**
   * set modifiedTime.
   *
   * @param modifiedTime the modifiedTime to set
   */
  public void setModifiedTime(ZonedDateTime modifiedTime) {
    this.modifiedTime = modifiedTime;
  }

  /**
   * get attribute.
   *
   * @return the attribute
   */
  public Attribute getAttribute() {
    return attribute;
  }

  /**
   * set attribute.
   *
   * @param attribute the attribute to set
   */
  public void setAttribute(Attribute attribute) {
    this.attribute = attribute;
  }

  /**
   * hashCode.
   */
  @Override
  public int hashCode() {
    return Objects.hashCode(id, value);
  }

  /**
   * equals.
   */
  @Override
  public boolean equals(Object obj) {
    boolean equalsResult = false;
    if (this == obj) {
      equalsResult = true;
    } else if (obj instanceof AttributeValue) {
      final AttributeValue other = (AttributeValue) obj;
      equalsResult = Objects.equal(id, other.id) && Objects.equal(value, other.value);
    }
    return equalsResult;
  }
}
