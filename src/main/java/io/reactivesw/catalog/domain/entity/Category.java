package io.reactivesw.catalog.domain.entity;

import java.io.Serializable;
import java.time.ZonedDateTime;
import java.util.Objects;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * this is the entity class for category.
 *
 * @author Davis
 */
@Entity
@Table(name = "SW_CATEGORY")
public class Category implements Serializable {

  private static final long serialVersionUID = 8919625554995967436L;
  /**
   * id for category. auto generated by database.
   */
  @Id
  @Column(name = "category_id")
  @GeneratedValue(strategy = GenerationType.AUTO)
  private long id;

  /**
   * name for category. max length is 255, cann't be null.
   */
  @Column(name = "name", length = 255, nullable = false)
  private String name;

  /**
   * description for category. max length is 1024, can be null.
   */
  @Column(name = "description", length = 1024)
  private String description;

  /**
   * display order for category.
   */
  @Column(name = "display_order")
  private int displayOrder;

  /**
   * create time.
   */
  @Column(name = "created_time")
  private ZonedDateTime createdTime;

  /**
   * last modified time.
   */
  @Column(name = "modified_time")
  private ZonedDateTime modifiedTime;

  /**
   * products.
   */
  @OneToMany(mappedBy = "category")
  private Set<Product> products;

  /**
   * get if for category.
   *
   * @return id
   */
  public long getId() {
    return id;
  }

  /**
   * set if for category.
   *
   * @param id id.
   */
  public void setId(long id) {
    this.id = id;
  }

  /**
   * get name for category.
   *
   * @return name.
   */
  public String getName() {
    return name;
  }

  /**
   * set name for category.
   *
   * @param name name.
   */
  public void setName(String name) {
    this.name = name;
  }

  /**
   * get description for category.
   *
   * @return description.
   */
  public String getDescription() {
    return description;
  }

  /**
   * set description for category.
   *
   * @param description description.
   */
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * get display order.
   *
   * @return displayOrder.
   */
  public int getDisplayOrder() {
    return displayOrder;
  }

  /**
   * set display order.
   *
   * @param displayOrder displayOrder
   */
  public void setDisplayOrder(int displayOrder) {
    this.displayOrder = displayOrder;
  }

  /**
   * get create time.
   *
   * @return create time.
   */
  public ZonedDateTime getCreatedTime() {
    return createdTime;
  }

  /**
   * set create time.
   *
   * @param createdTime create time.
   */
  public void setCreatedTime(ZonedDateTime createdTime) {
    this.createdTime = createdTime;
  }

  /**
   * get last modified time.
   *
   * @return modifiedTime.
   */
  public ZonedDateTime getModifiedTime() {
    return modifiedTime;
  }

  /**
   * set last modified time.
   *
   * @param modifiedTime last modified time.
   */
  public void setModifiedTime(ZonedDateTime modifiedTime) {
    this.modifiedTime = modifiedTime;
  }

  /**
   * get all products.
   *
   * @return products.
   */
  public Set<Product> getProducts() {
    return products;
  }

  /**
   * set products.
   *
   * @param products products.
   */
  public void setProducts(Set<Product> products) {
    this.products = products;
  }

  /**
   * hashCode.
   */
  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, displayOrder);
  }

  /**
   * equals.
   */
  @Override
  public boolean equals(Object obj) {
    boolean equalsResult = false;
    if (this == obj) {
      equalsResult = true;
    } else if (obj instanceof Category) {
      final Category other = (Category) obj;
      equalsResult = Objects.equals(id, other.id) && Objects.equals(name, other.name)
          && Objects.equals(description, other.description)
          && Objects.equals(displayOrder, other.displayOrder);
    }
    return equalsResult;
  }
}
