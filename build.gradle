apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'com.google.protobuf'

apply from: 'code_analyze_and_test/code_analyzer.gradle'
apply from: 'code_analyze_and_test/code_unit_test.gradle'

buildscript {
    ext {
        springBootVersion = '1.4.0.RELEASE'
        grpcVersion = '1.0.0'
    }
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('com.google.protobuf:protobuf-gradle-plugin:0.8.0')
        classpath('com.palantir:jacoco-coverage:0.4.0')
    }
}

jar {
    baseName = 'reactivesw-catelog'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
}

dependencyManagement {
    imports { mavenBom "org.springframework.cloud:spring-cloud-dependencies:Brixton.SR5" }
}

sourceSets {
    main { java { srcDir 'src/main/protoGen' } }
}
protobuf {
    protoc { artifact = "com.google.protobuf:protoc:3.0.0" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }

    generateProtoTasks {
        ofSourceSet('main').each { task ->
            task.builtins { java { outputSubDir = 'protoGen' } }
            task.plugins { grpc { outputSubDir = 'protoGen' } }
        }
    }
    generatedFilesBaseDir = "$projectDir/src/"
}
task cleanProtoGen {
    doFirst { delete("$projectDir/src/main/protoGen") }
}
clean.dependsOn cleanProtoGen
protobuf {
    protoc { artifact = "com.google.protobuf:protoc:3.0.0-beta-3" }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:0.15.0'
        }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
    generatedFilesBaseDir = "$projectDir/src/"
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web:1.4.0.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-data-jpa:1.4.0.RELEASE')
    compile('mysql:mysql-connector-java:5.1.26')
    compile('javax.money:money-api:1.0')
    compile('org.apache.commons:commons-lang3:3.4')
    compile('org.slf4j:slf4j-api:1.7.21')
    compile('ch.qos.logback:logback-classic:1.1.7')
    compile('io.grpc:grpc-stub:1.0.0')
    compile('io.grpc:grpc-protobuf:1.0.0')
    compile('io.grpc:grpc-netty:1.0.0')
    compile('org.lognet:grpc-spring-boot-starter:0.0.5')
    compile('org.modelmapper:modelmapper:0.7.6')
    compile('cglib:cglib-nodep:3.1')

    testCompile('org.springframework.boot:spring-boot-starter-test:1.4.0.RELEASE')
    testCompile('org.codehaus.groovy:groovy-all:2.3.10')
    testCompile('org.spockframework:spock-core:1.0-groovy-2.3')
    testCompile('org.spockframework:spock-spring:1.0-groovy-2.3')
    testCompile('org.mockito:mockito-all:1.8.5')
}
